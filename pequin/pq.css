/*
 * Copyright 2020 Vasiliy Vdovin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

:root {
	--font-size: 16px;
	font-size: var(--font-size);
	line-height: calc(var(--font-size) * 1.5);
}

* {
	margin: 0;
	padding: 0;
}

a {
	position: relative;
	display: inline-block;
	text-decoration: none;
}

a::after, a::before {
	position: absolute;
	bottom: 0;
	left: -1px;
	right: -1px;
	content: "";
	height: 4px;
	display: block;
	border-radius: 2px;
}

a::after {
	transition-property: transform;
	transition-duration: 300ms;
	transition-timing-function: ease-out;
	background-color: gold;
	transform: scaleX(0);
}

a::before {
	background-color: grey;
}

#main-header {
	position: fixed;
	display: flex;
	flex-wrap: nowrap;
	flex-direction: row;
	justify-content: space-between;
	top: 0;
	right: 0;
	left: 0;
	--height: 64px;
	height: var(--height);
	background-color: rgba(66, 133, 133, 0.5);
	z-index: 2;
}

#logo {
	position: relative;
	width: var(--height);
	background-color: rgba(0, 15, 100, 0.644);
}

#main-header > nav {
	position: relative;
	display: flex;
	flex-wrap: nowrap;
	flex-direction: row;
	background-color: rgba(0, 100, 0, 0.644);
}

#main-header > nav > a {
	line-height: var(--height);
}

#main-header > nav > a:not(:first-child) {
	margin-left: 12px;
}

section {
	position: relative;
	min-height: 100vh;
	width: auto;
	overflow: hidden;
	--offset: 0px;
}

section::after {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	content: "";
	background-image: url("/images/work.jpg");
	background-size: cover;
	background-position: center;
	z-index: -1;
	transform: translateY(calc(var(--offset) * 0.5));
}

@media (hover: hover) {
	a:hover::after {
		transform: scaleX(1);
	}
}